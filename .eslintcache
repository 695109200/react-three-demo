[{"C:\\code\\react-three-demo\\src\\index.js":"1","C:\\code\\react-three-demo\\src\\router.js":"2","C:\\code\\react-three-demo\\src\\home.js":"3","C:\\code\\react-three-demo\\src\\DemoPage\\demo3.jsx":"4","C:\\code\\react-three-demo\\src\\DemoPage\\demo1.jsx":"5","C:\\code\\react-three-demo\\src\\DemoPage\\demo5.jsx":"6","C:\\code\\react-three-demo\\src\\DemoPage\\demo6.jsx":"7","C:\\code\\react-three-demo\\src\\DemoPage\\demo2.jsx":"8","C:\\code\\react-three-demo\\src\\DemoPage\\demo8.jsx":"9","C:\\code\\react-three-demo\\src\\DemoPage\\demo4.jsx":"10","C:\\code\\react-three-demo\\src\\DemoPage\\demo7.jsx":"11","C:\\code\\react-three-demo\\src\\DemoPage\\demo9.jsx":"12","C:\\code\\react-three-demo\\src\\DemoPage\\demo10.jsx":"13"},{"size":407,"mtime":1612468120897,"results":"14","hashOfConfig":"15"},{"size":1329,"mtime":1612774658855,"results":"16","hashOfConfig":"15"},{"size":2365,"mtime":1612773883096,"results":"17","hashOfConfig":"15"},{"size":2289,"mtime":1612468120895,"results":"18","hashOfConfig":"15"},{"size":1888,"mtime":1612468120895,"results":"19","hashOfConfig":"15"},{"size":2386,"mtime":1612468120896,"results":"20","hashOfConfig":"15"},{"size":2717,"mtime":1612468120896,"results":"21","hashOfConfig":"15"},{"size":2652,"mtime":1612468120895,"results":"22","hashOfConfig":"15"},{"size":3334,"mtime":1612774493063,"results":"23","hashOfConfig":"15"},{"size":3089,"mtime":1612468120895,"results":"24","hashOfConfig":"15"},{"size":4049,"mtime":1612774603216,"results":"25","hashOfConfig":"15"},{"size":4666,"mtime":1612468120897,"results":"26","hashOfConfig":"15"},{"size":2970,"mtime":1612776811314,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1ijuex0",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\code\\react-three-demo\\src\\index.js",[],["62","63"],"C:\\code\\react-three-demo\\src\\router.js",["64"],"C:\\code\\react-three-demo\\src\\home.js",["65","66","67","68","69","70","71","72","73","74","75","76"],"C:\\code\\react-three-demo\\src\\DemoPage\\demo3.jsx",["77","78","79","80","81","82","83","84","85","86","87"],"import css from '../index.css'\r\nimport * as Three from 'three';\r\nimport React, { useState, useEffect, refs } from 'react'\r\nimport Orbitcontrols from 'three-orbitcontrols';\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\n\r\nfunction Demo3() {\r\n    const [camera, setCamera] = useState(new Three.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000))    //摄像机\r\n    const [scene, setScene] = useState(new Three.Scene())   //场景\r\n    const [render, setRender] = useState(new Three.WebGLRenderer({ antialias: true }))  //渲染器\r\n    const [gridHelper, setGridHelper] = useState(new Three.GridHelper(70, 70))      //地板辅助线\r\n    camera.position.set(-0.3243055677386816, 16.570924182400017, 25.00598523633661)  //设置镜头位置\r\n    const [controls, setControls] = useState(new Orbitcontrols(camera, render.domElement))\r\n    const [loader, setLoader] = useState( new GLTFLoader())                 //gltf加载器\r\n    const [light, setLight] = useState( new Three.AmbientLight(0xffffff))   //全局光\r\n    const [light2, setLight2] = useState(new Three.SpotLight(0xffffff))     //跟随光\r\n    \r\n    //初始化\r\n    function init() {\r\n        render.setPixelRatio(window.devicePixelRatio);  //设置渲染器设备像素比。通常用于避免HiDPI设备上绘图模糊\r\n        render.setClearColor(0xFFFFFF, 1.0);    //设置渲染器的背景颜色及其透明度\r\n        scene.add(gridHelper)   //场景添加地板\r\n        scene.add(light)\r\n        scene.add(light2)\r\n    }\r\n\r\n    function load(){\r\n        //主要加载函数\r\n        loader.load(\"Bee.glb\", (object) => {\r\n            scene.add(object.scene);    //加载成功添加进场景\r\n        });\r\n    }\r\n\r\n    function animation() {\r\n        render.render(scene, camera);    //每次渲染器把场景和摄像机一起渲染\r\n        requestAnimationFrame(animation);//采用系统时间间隔,保持最佳绘制效率进行渲染\r\n    }\r\n\r\n    useEffect(() => {\r\n        render.setSize(window.innerWidth, window.innerHeight)\r\n        document.getElementById('canvas-frame').appendChild(render.domElement);\r\n        init()\r\n        animation()\r\n        load()\r\n\r\n    })\r\n    return (\r\n        <div id='canvas-frame'></div>\r\n    );\r\n}\r\n\r\nexport default Demo3;","C:\\code\\react-three-demo\\src\\DemoPage\\demo1.jsx",["88","89"],"import css from '../index.css'\r\nimport * as Three from 'three';\r\nimport React, { useState, useEffect, refs } from 'react'\r\nfunction Demo1() {\r\n\r\n  const [camera] = useState(new Three.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000))    //摄像机\r\n  const [scene] = useState(new Three.Scene())   //场景\r\n  const [render] = useState(new Three.WebGLRenderer({ antialias: true }))  //渲染器\r\n  const geometry = new Three.BoxGeometry(1, 1, 1);  //定义geometry(一个几何体)   BoxGeometry(立方几何体)\r\n  const material = new Three.MeshBasicMaterial({ color: 0xC71585 });  //定义material(材质)  MeshBasicMaterial(网格基本材质,不受光照影响，一个以简单的着色)\r\n  const cube = new Three.Mesh(geometry, material);  //定义一个网格，这个网格由一个几何体和一个材质构成,也就是旋转着的正方体由这两个构成\r\n\r\n  function add() {\r\n    scene.add(cube);  //往场景添加正方体\r\n    camera.position.z = 5;\r\n  }\r\n\r\n  function animation() {\r\n    cube.rotation.x += 0.01;            //每次渲染正方体的x轴+0.1\r\n    cube.rotation.y += 0.01;            //每次渲染正方体的y轴+0.1\r\n    render.render(scene, camera);       //每次渲染器把场景和摄像机一起渲染\r\n    requestAnimationFrame(animation);   //采用系统时间间隔,保持最佳绘制效率进行渲染\r\n  }\r\n\r\n  useEffect(() => {\r\n    render.setSize(window.innerWidth, window.innerHeight)\r\n    document.getElementById('canvas-frame').appendChild(render.domElement);\r\n    render.setPixelRatio(window.devicePixelRatio);  //设置渲染器设备像素比。通常用于避免HiDPI设备上绘图模糊\r\n    render.setClearColor(0xFFFFFF, 1.0);          //设置渲染器的背景颜色及其透明度\r\n    add()\r\n    animation()\r\n  })\r\n\r\n  return (\r\n    <div id='canvas-frame'></div>\r\n  );\r\n}\r\n\r\nexport default Demo1;","C:\\code\\react-three-demo\\src\\DemoPage\\demo5.jsx",["90","91","92"],"import css from '../index.css'\r\nimport * as Three from 'three';\r\nimport React, { useState, useEffect } from 'react'\r\nimport Orbitcontrols from 'three-orbitcontrols';\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport TWEEN from '@tweenjs/tween.js'\r\nfunction Demo5() {\r\n    const [camera] = useState(new Three.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 1, 1000))    //摄像机\r\n    camera.position.set(-48.29395512934191, 22.285677525066234, -0.23486243146612543);\r\n    const [scene] = useState(new Three.Scene())   //场景\r\n    const [render] = useState(new Three.WebGLRenderer({ antialias: true }))  //渲染器\r\n    const [controls] = useState(new Orbitcontrols(camera, render.domElement))\r\n    const [loader] = useState( new GLTFLoader())                 //gltf加载器\r\n    const [light] = useState( new Three.AmbientLight(0xffffff))   //全局光\r\n    const [light2] = useState(new Three.SpotLight(0xffffff))     //跟随光\r\n    const [gridHelper] = useState(new Three.GridHelper(70, 70))      //地板辅助线\r\n    //添加东西进去\r\n    function add() {\r\n        scene.add(light,gridHelper,light2)\r\n    }\r\n    function load(){\r\n        //主要加载函数\r\n        loader.load(\"Bee.glb\", (object) => {\r\n            scene.add(object.scene);    //加载成功添加进场景\r\n            var tween = new TWEEN.Tween(scene.children[3].position).to({y:20}).repeat(Infinity).yoyo(true).start()\r\n        });\r\n    }\r\n    //每秒渲染\r\n    function animation() {\r\n        render.render(scene, camera);    //每次渲染器把场景和摄像机一起渲染\r\n        TWEEN.update()\r\n        requestAnimationFrame(animation);//采用系统时间间隔,保持最佳绘制效率进行渲染\r\n    }\r\n\r\n    useEffect(() => {\r\n        render.setSize(window.innerWidth, window.innerHeight)\r\n        render.domElement.removeAttribute(\"tabindex\")   //清除点击canvas的黑边\r\n        document.getElementById('canvas-frame').appendChild(render.domElement);\r\n        render.setPixelRatio(window.devicePixelRatio);  //设置渲染器设备像素比。通常用于避免HiDPI设备上绘图模糊\r\n        render.setClearColor(0xFFFFFF, 1.0);    //设置渲染器的背景颜色及其透明度\r\n        add()\r\n        animation()\r\n        load()\r\n    })\r\n    return (\r\n        <div id='canvas-frame'></div>\r\n    );\r\n}\r\n\r\nexport default Demo5;","C:\\code\\react-three-demo\\src\\DemoPage\\demo6.jsx",["93","94"],"import css from '../index.css'\r\nimport * as Three from 'three';\r\nimport React, { useState, useEffect } from 'react'\r\nimport Orbitcontrols from 'three-orbitcontrols';\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\n\r\nfunction Demo6() {\r\n    const [camera] = useState(new Three.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 1, 1000))    //摄像机\r\n    camera.position.set(-48.29395512934191, 22.285677525066234, -0.23486243146612543);\r\n    const [scene] = useState(new Three.Scene())   //场景\r\n    const [render] = useState(new Three.WebGLRenderer({ antialias: true }))  //渲染器\r\n    const [controls] = useState(new Orbitcontrols(camera, render.domElement))\r\n    const [loader] = useState(new GLTFLoader())                 //gltf加载器\r\n    const [light] = useState(new Three.AmbientLight(0xffffff))   //全局光\r\n    const [light2] = useState(new Three.SpotLight(0xffffff))     //跟随光\r\n    const [gridHelper] = useState(new Three.GridHelper(70, 70))      //地板辅助线\r\n    var mixer;\r\n\r\n    //添加东西进去\r\n    function add() {\r\n        scene.add(light, gridHelper, light2)\r\n    }\r\n\r\n    //主要加载函数\r\n    function load() {\r\n        loader.load(\"Bee.glb\", (glt) => {\r\n            scene.add(glt.scene);                        //加载成功添加进场景\r\n            mixer = new Three.AnimationMixer(scene.children[3])   //把刚刚添加进场景的模型添加进动画的播放器\r\n            glt.animations.forEach((clip) => {             //循环导入模型里自带的动画数组，轮流播放\r\n                mixer.clipAction(clip).play();                    //clipAction: 获取播放器对应的动画\r\n            });\r\n        });\r\n    }\r\n\r\n    //每秒渲染\r\n    function animation() {\r\n        render.render(scene, camera);    //每次渲染器把场景和摄像机一起渲染\r\n        if (mixer) mixer.update(0.03)          //刷新动画渲染速度\r\n        requestAnimationFrame(animation);//采用系统时间间隔,保持最佳绘制效率进行渲染\r\n    }\r\n    \r\n    //初始化\r\n    useEffect(() => {\r\n        render.setSize(window.innerWidth, window.innerHeight)\r\n        render.domElement.removeAttribute(\"tabindex\")   //清除点击canvas的黑边\r\n        document.getElementById('canvas-frame').appendChild(render.domElement);\r\n        render.setPixelRatio(window.devicePixelRatio);  //设置渲染器设备像素比。通常用于避免HiDPI设备上绘图模糊\r\n        render.setClearColor(0xFFFFFF, 1.0);    //设置渲染器的背景颜色及其透明度\r\n        add()\r\n        animation()\r\n        load()\r\n    })\r\n    return (\r\n        <div id='canvas-frame'></div>\r\n    );\r\n}\r\n\r\nexport default Demo6;","C:\\code\\react-three-demo\\src\\DemoPage\\demo2.jsx",["95","96","97","98","99","100","101","102","103"],"import css from '../index.css'\r\nimport * as Three from 'three';\r\nimport React, { useState, useEffect, refs } from 'react'\r\nimport Orbitcontrols from 'three-orbitcontrols';\r\n\r\nfunction Demo2() {\r\n\r\n    const [camera, setCamera] = useState(new Three.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000))    //摄像机\r\n    const [scene, setScene] = useState(new Three.Scene())   //场景\r\n    const [render, setRender] = useState(new Three.WebGLRenderer({ antialias: true }))  //渲染器\r\n\r\n    const [axisHelper, setAxisHelper] = useState(new Three.AxisHelper(30, 30))      //三维坐标系\r\n    const [gridHelper, setGridHelper] = useState(new Three.GridHelper(70, 70))      //地板辅助线\r\n    camera.position.set(10, 10, 0)  //设置镜头位置\r\n    \r\n    const [controls, setControls] = useState(new Orbitcontrols(camera, render.domElement))\r\n\r\n    const geometry = new Three.BoxGeometry(1, 1, 1);    //定义geometry(一个几何体)   BoxGeometry(立方几何体)\r\n    const material = new Three.MeshBasicMaterial({ color: 0xC71585 });  //定义material(材质)  MeshBasicMaterial(网格基本材质,不受光照影响，一个以简单的着色)\r\n    const cube = new Three.Mesh(geometry, material);         //定义一个网格，这个网格由一个几何体和一个材质构成,也就是旋转着的正方体由这两个构成\r\n   \r\n    //初始化\r\n    function init() {\r\n        render.setPixelRatio(window.devicePixelRatio);  //设置渲染器设备像素比。通常用于避免HiDPI设备上绘图模糊\r\n        render.setClearColor(0xFFFFFF, 1.0);    //设置渲染器的背景颜色及其透明度\r\n        scene.add(axisHelper)   //场景添加三维坐标系\r\n        scene.add(gridHelper)   //场景添加地板\r\n        add()\r\n    }\r\n\r\n    function add() {\r\n        scene.add(cube);    //场景添加立方体\r\n        cube.position.set(0, 2, 0)  //设置立方体位置\r\n        camera.position.z = 5;\r\n    }\r\n\r\n    function animation() {\r\n        cube.rotation.x += 0.01;         //每次渲染正方体的x轴+0.1\r\n        cube.rotation.y += 0.01;         //每次渲染正方体的y轴+0.1\r\n        render.render(scene, camera);    //每次渲染器把场景和摄像机一起渲染\r\n        requestAnimationFrame(animation);//采用系统时间间隔,保持最佳绘制效率进行渲染\r\n    }\r\n\r\n    useEffect(() => {\r\n        render.setSize(window.innerWidth, window.innerHeight)\r\n        document.getElementById('canvas-frame').appendChild(render.domElement);\r\n        init()\r\n        animation()\r\n    })\r\n    return (\r\n        <div id='canvas-frame'></div>\r\n    );\r\n}\r\n\r\nexport default Demo2;","C:\\code\\react-three-demo\\src\\DemoPage\\demo8.jsx",["104","105","106","107"],"C:\\code\\react-three-demo\\src\\DemoPage\\demo4.jsx",["108","109","110","111","112","113"],"import css from '../index.css'\r\nimport * as Three from 'three';\r\nimport React, { useState, useEffect, refs } from 'react'\r\nimport Orbitcontrols from 'three-orbitcontrols';\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nfunction Demo4() {\r\n\r\n    const [camera] = useState(new Three.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 1, 1000))    //摄像机\r\n    camera.position.set(-48.29395512934191, 22.285677525066234, -0.23486243146612543);\r\n    const [scene] = useState(new Three.Scene())   //场景\r\n    const [render] = useState(new Three.WebGLRenderer({ antialias: true }))  //渲染器\r\n    const [loader, setLoader] = useState( new GLTFLoader())                 //gltf加载器\r\n    const [light, setLight] = useState( new Three.AmbientLight(0xffffff))   //全局光\r\n    const [light2, setLight2] = useState(new Three.SpotLight(0xffffff))     //跟随光\r\n    const [controls] = useState(new Orbitcontrols(camera, render.domElement))\r\n    const [raycaster] = useState(new Three.Raycaster())\r\n    const [mouse] = useState(new Three.Vector2())\r\n    \r\n    let intersects;\r\n    window.addEventListener('mousemove', onMouseMove, false);\r\n    window.addEventListener('mousedown', onMouseDown, false);\r\n\r\n    function onMouseMove(event) {\r\n        mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\r\n        mouse.y = - (event.clientY / window.innerHeight) * 2 + 1;\r\n    }\r\n\r\n    function onMouseDown(event) {\r\n        raycaster.setFromCamera(mouse, camera);\r\n        intersects = raycaster.intersectObjects(scene.children,true);   //intersects = 射线经过的物体数组\r\n\r\n        if (intersects.length > 0 && intersects[ 0 ].object.type !== 'GridHelper') {    //判断射线经过的物体数组的长度以及做筛选\r\n            intersects[ 0 ].object.material.color.set( 0xff0000 );                      //数组第一个就是获取到的对象\r\n        }\r\n    }\r\n\r\n    function load(){\r\n        loader.load(\"Bee.glb\", (object) => {\r\n            scene.add(object.scene);    //加载成功添加进场景\r\n        });\r\n    }\r\n    //添加东西进去\r\n    function add() {\r\n        scene.add(new Three.GridHelper(70, 70),light2,light)\r\n    }\r\n\r\n    //每秒渲染\r\n    function animation() {\r\n        render.render(scene, camera);    //每次渲染器把场景和摄像机一起渲染\r\n        requestAnimationFrame(animation);//采用系统时间间隔,保持最佳绘制效率进行渲染\r\n    }\r\n\r\n    useEffect(() => {\r\n        render.setSize(window.innerWidth, window.innerHeight)\r\n        render.domElement.removeAttribute(\"tabindex\")   //清除点击canvas的黑边\r\n        document.getElementById('canvas-frame').appendChild(render.domElement);\r\n        render.setPixelRatio(window.devicePixelRatio);  //设置渲染器设备像素比。通常用于避免HiDPI设备上绘图模糊\r\n        render.setClearColor(0xFFFFFF, 1.0);    //设置渲染器的背景颜色及其透明度\r\n        add()\r\n        animation()\r\n        load()\r\n    })\r\n    return (\r\n        <div id='canvas-frame'></div>\r\n    );\r\n}\r\n\r\nexport default Demo4;","C:\\code\\react-three-demo\\src\\DemoPage\\demo7.jsx",["114"],"C:\\code\\react-three-demo\\src\\DemoPage\\demo9.jsx",["115","116","117","118"],"import css from '../index.css'\r\nimport * as Three from 'three';\r\nimport React, { useState, useEffect } from 'react'\r\nimport Orbitcontrols from 'three-orbitcontrols';\r\n\r\nfunction Demo9() {\r\n    const [camera] = useState(new Three.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 1, 1000))    //摄像机\r\n    camera.position.set(-48.29395512934191, 22.285677525066234, -0.23486243146612543);\r\n    const [scene] = useState(new Three.Scene())   //场景\r\n    const [render] = useState(new Three.WebGLRenderer({ antialias: true }))  //渲染器\r\n    const [controls] = useState(new Orbitcontrols(camera, render.domElement))\r\n    const [light] = useState(new Three.AmbientLight(0xffffff))   //全局光\r\n    const [plane] = useState(new Three.Mesh(new Three.PlaneBufferGeometry(70, 70), new Three.MeshStandardMaterial({ color: 0xffffff })))     //跟随光\r\n\r\n    const [firstCube] = useState(new Three.Mesh(new Three.BoxBufferGeometry(0.2, 0.2, 0.2), new Three.MeshBasicMaterial({ color: 0x000000 })))     //跟随光\r\n    const [scendCube] = useState(new Three.Mesh(new Three.BoxBufferGeometry(0.2, 0.2, 0.2), new Three.MeshBasicMaterial({ color: 0x000000 })))     //跟随光\r\n\r\n\r\n    //添加东西进去\r\n    function add() {\r\n        firstCube.visible = false\r\n        scendCube.visible = false\r\n        scene.add(light, plane, firstCube, scendCube)\r\n    }\r\n\r\n    document.addEventListener('click', function (e) {\r\n        onMouseClick(e);\r\n    });\r\n\r\n    //每秒渲染\r\n    function animation() {\r\n        render.render(scene, camera);    //每次渲染器把场景和摄像机一起渲染\r\n        requestAnimationFrame(animation);//采用系统时间间隔,保持最佳绘制效率进行渲染\r\n    }\r\n\r\n    //初始光源\r\n    function initLight(){\r\n        light.position.set(10, 10, 10)\r\n    }\r\n    //初始地板\r\n    function initPlan(){\r\n        plane.rotation.x = -0.5 * Math.PI\r\n        plane.receiveShadow = true;\r\n    }\r\n\r\n    //添加直线\r\n    function addLine(){\r\n        scene.add(new Three.Line(new Three.BufferGeometry().setFromPoints([scendCube.position, firstCube.position]), new Three.LineBasicMaterial({\r\n            color: 0x000000\r\n        })))\r\n        // var center = new Three.Vector3();\r\n        // console.log(scene.children[4].getCenter(center))\r\n        // console.log(firstCube.position.distanceTo(scendCube.position))\r\n    }\r\n\r\n    //点击事件\r\n    function onMouseClick(event) {\r\n        event.preventDefault();\r\n        var vector = new Three.Vector3(); //三维坐标对象\r\n        vector.set(\r\n            (event.clientX / window.innerWidth) * 2 - 1,\r\n            -(event.clientY / window.innerHeight) * 2 + 1,\r\n            0.5\r\n        );\r\n        vector.unproject(camera);\r\n        var raycaster = new Three.Raycaster(\r\n            camera.position,\r\n            vector.sub(camera.position).normalize()\r\n        );\r\n        var intersects = raycaster.intersectObjects(\r\n            scene.children,\r\n            true\r\n        );\r\n\r\n        if (intersects.length > 0) {\r\n            var selected = intersects[0]; //取第一个物体\r\n\r\n            if (scendCube.visible == true) {    //如果第二个点是显示状态再次点击则隐藏全部\r\n                scene.children.pop()\r\n                scendCube.visible = false\r\n                firstCube.visible = false\r\n                return\r\n            }\r\n\r\n            if (firstCube.visible == true) {    //判断当前应该显示哪个点位\r\n                scendCube.visible = true        \r\n                scendCube.position.copy(selected.point)\r\n                addLine()                       //第二个显示出来了则可以进行连线\r\n                setTimeout(()=>{\r\n                    alert('长度:'+firstCube.position.distanceTo(scendCube.position))\r\n                },1200)\r\n\r\n            } else {\r\n                firstCube.visible = true\r\n                firstCube.position.copy(selected.point)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    //初始化\r\n    useEffect(() => {\r\n        render.setSize(window.innerWidth, window.innerHeight)\r\n        render.domElement.removeAttribute(\"tabindex\")   //清除点击canvas的黑边\r\n        document.getElementById('canvas-frame').appendChild(render.domElement);\r\n        render.setPixelRatio(window.devicePixelRatio);  //设置渲染器设备像素比。通常用于避免HiDPI设备上绘图模糊\r\n        render.setClearColor(0xeeeeee, 1.0);    //设置渲染器的背景颜色及其透明度\r\n        add()\r\n        addLine()\r\n        initLight()\r\n        initPlan()\r\n        animation()\r\n    })\r\n    return (\r\n        <div id='canvas-frame'></div>\r\n    );\r\n}\r\n\r\nexport default Demo9;","C:\\code\\react-three-demo\\src\\DemoPage\\demo10.jsx",["119","120","121","122"],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":2,"column":36,"nodeType":"129","messageId":"130","endLine":2,"endColumn":44},{"ruleId":"127","severity":1,"message":"131","line":1,"column":8,"nodeType":"129","messageId":"130","endLine":1,"endColumn":11},{"ruleId":"132","severity":1,"message":"133","line":11,"column":14,"nodeType":"134","endLine":11,"endColumn":50},{"ruleId":"132","severity":1,"message":"133","line":16,"column":15,"nodeType":"134","endLine":16,"endColumn":51},{"ruleId":"132","severity":1,"message":"133","line":21,"column":15,"nodeType":"134","endLine":21,"endColumn":51},{"ruleId":"132","severity":1,"message":"133","line":26,"column":15,"nodeType":"134","endLine":26,"endColumn":51},{"ruleId":"132","severity":1,"message":"133","line":31,"column":15,"nodeType":"134","endLine":31,"endColumn":51},{"ruleId":"132","severity":1,"message":"133","line":36,"column":15,"nodeType":"134","endLine":36,"endColumn":51},{"ruleId":"132","severity":1,"message":"133","line":41,"column":15,"nodeType":"134","endLine":41,"endColumn":51},{"ruleId":"132","severity":1,"message":"133","line":46,"column":15,"nodeType":"134","endLine":46,"endColumn":51},{"ruleId":"132","severity":1,"message":"133","line":51,"column":15,"nodeType":"134","endLine":51,"endColumn":51},{"ruleId":"132","severity":1,"message":"133","line":55,"column":15,"nodeType":"134","endLine":55,"endColumn":52},{"ruleId":"132","severity":1,"message":"133","line":59,"column":15,"nodeType":"134","endLine":59,"endColumn":52},{"ruleId":"127","severity":1,"message":"131","line":1,"column":8,"nodeType":"129","messageId":"130","endLine":1,"endColumn":11},{"ruleId":"127","severity":1,"message":"135","line":3,"column":38,"nodeType":"129","messageId":"130","endLine":3,"endColumn":42},{"ruleId":"127","severity":1,"message":"136","line":8,"column":20,"nodeType":"129","messageId":"130","endLine":8,"endColumn":29},{"ruleId":"127","severity":1,"message":"137","line":9,"column":19,"nodeType":"129","messageId":"130","endLine":9,"endColumn":27},{"ruleId":"127","severity":1,"message":"138","line":10,"column":20,"nodeType":"129","messageId":"130","endLine":10,"endColumn":29},{"ruleId":"127","severity":1,"message":"139","line":11,"column":24,"nodeType":"129","messageId":"130","endLine":11,"endColumn":37},{"ruleId":"127","severity":1,"message":"140","line":13,"column":12,"nodeType":"129","messageId":"130","endLine":13,"endColumn":20},{"ruleId":"127","severity":1,"message":"141","line":13,"column":22,"nodeType":"129","messageId":"130","endLine":13,"endColumn":33},{"ruleId":"127","severity":1,"message":"142","line":14,"column":20,"nodeType":"129","messageId":"130","endLine":14,"endColumn":29},{"ruleId":"127","severity":1,"message":"143","line":15,"column":19,"nodeType":"129","messageId":"130","endLine":15,"endColumn":27},{"ruleId":"127","severity":1,"message":"144","line":16,"column":20,"nodeType":"129","messageId":"130","endLine":16,"endColumn":29},{"ruleId":"127","severity":1,"message":"131","line":1,"column":8,"nodeType":"129","messageId":"130","endLine":1,"endColumn":11},{"ruleId":"127","severity":1,"message":"135","line":3,"column":38,"nodeType":"129","messageId":"130","endLine":3,"endColumn":42},{"ruleId":"127","severity":1,"message":"131","line":1,"column":8,"nodeType":"129","messageId":"130","endLine":1,"endColumn":11},{"ruleId":"127","severity":1,"message":"140","line":12,"column":12,"nodeType":"129","messageId":"130","endLine":12,"endColumn":20},{"ruleId":"127","severity":1,"message":"145","line":25,"column":17,"nodeType":"129","messageId":"130","endLine":25,"endColumn":22},{"ruleId":"127","severity":1,"message":"131","line":1,"column":8,"nodeType":"129","messageId":"130","endLine":1,"endColumn":11},{"ruleId":"127","severity":1,"message":"140","line":12,"column":12,"nodeType":"129","messageId":"130","endLine":12,"endColumn":20},{"ruleId":"127","severity":1,"message":"131","line":1,"column":8,"nodeType":"129","messageId":"130","endLine":1,"endColumn":11},{"ruleId":"127","severity":1,"message":"135","line":3,"column":38,"nodeType":"129","messageId":"130","endLine":3,"endColumn":42},{"ruleId":"127","severity":1,"message":"136","line":8,"column":20,"nodeType":"129","messageId":"130","endLine":8,"endColumn":29},{"ruleId":"127","severity":1,"message":"137","line":9,"column":19,"nodeType":"129","messageId":"130","endLine":9,"endColumn":27},{"ruleId":"127","severity":1,"message":"138","line":10,"column":20,"nodeType":"129","messageId":"130","endLine":10,"endColumn":29},{"ruleId":"127","severity":1,"message":"146","line":12,"column":24,"nodeType":"129","messageId":"130","endLine":12,"endColumn":37},{"ruleId":"127","severity":1,"message":"139","line":13,"column":24,"nodeType":"129","messageId":"130","endLine":13,"endColumn":37},{"ruleId":"127","severity":1,"message":"140","line":16,"column":12,"nodeType":"129","messageId":"130","endLine":16,"endColumn":20},{"ruleId":"127","severity":1,"message":"141","line":16,"column":22,"nodeType":"129","messageId":"130","endLine":16,"endColumn":33},{"ruleId":"127","severity":1,"message":"131","line":1,"column":8,"nodeType":"129","messageId":"130","endLine":1,"endColumn":11},{"ruleId":"127","severity":1,"message":"147","line":26,"column":10,"nodeType":"129","messageId":"130","endLine":26,"endColumn":16},{"ruleId":"148","severity":1,"message":"149","line":71,"column":29,"nodeType":"150","messageId":"151","endLine":71,"endColumn":31},{"ruleId":"148","severity":1,"message":"149","line":71,"column":60,"nodeType":"150","messageId":"151","endLine":71,"endColumn":62},{"ruleId":"127","severity":1,"message":"131","line":1,"column":8,"nodeType":"129","messageId":"130","endLine":1,"endColumn":11},{"ruleId":"127","severity":1,"message":"135","line":3,"column":38,"nodeType":"129","messageId":"130","endLine":3,"endColumn":42},{"ruleId":"127","severity":1,"message":"142","line":12,"column":20,"nodeType":"129","messageId":"130","endLine":12,"endColumn":29},{"ruleId":"127","severity":1,"message":"143","line":13,"column":19,"nodeType":"129","messageId":"130","endLine":13,"endColumn":27},{"ruleId":"127","severity":1,"message":"144","line":14,"column":20,"nodeType":"129","messageId":"130","endLine":14,"endColumn":29},{"ruleId":"127","severity":1,"message":"140","line":15,"column":12,"nodeType":"129","messageId":"130","endLine":15,"endColumn":20},{"ruleId":"127","severity":1,"message":"131","line":1,"column":8,"nodeType":"129","messageId":"130","endLine":1,"endColumn":11},{"ruleId":"127","severity":1,"message":"131","line":1,"column":8,"nodeType":"129","messageId":"130","endLine":1,"endColumn":11},{"ruleId":"127","severity":1,"message":"140","line":11,"column":12,"nodeType":"129","messageId":"130","endLine":11,"endColumn":20},{"ruleId":"148","severity":1,"message":"149","line":78,"column":35,"nodeType":"150","messageId":"151","endLine":78,"endColumn":37},{"ruleId":"148","severity":1,"message":"149","line":85,"column":35,"nodeType":"150","messageId":"151","endLine":85,"endColumn":37},{"ruleId":"127","severity":1,"message":"131","line":1,"column":8,"nodeType":"129","messageId":"130","endLine":1,"endColumn":11},{"ruleId":"127","severity":1,"message":"152","line":34,"column":7,"nodeType":"129","messageId":"130","endLine":34,"endColumn":17},{"ruleId":"127","severity":1,"message":"153","line":35,"column":9,"nodeType":"129","messageId":"130","endLine":35,"endColumn":10},{"ruleId":"127","severity":1,"message":"154","line":36,"column":9,"nodeType":"129","messageId":"130","endLine":36,"endColumn":10},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'css' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'refs' is defined but never used.","'setCamera' is assigned a value but never used.","'setScene' is assigned a value but never used.","'setRender' is assigned a value but never used.","'setGridHelper' is assigned a value but never used.","'controls' is assigned a value but never used.","'setControls' is assigned a value but never used.","'setLoader' is assigned a value but never used.","'setLight' is assigned a value but never used.","'setLight2' is assigned a value but never used.","'tween' is assigned a value but never used.","'setAxisHelper' is assigned a value but never used.","'loader' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'bMouseDown' is assigned a value but never used.","'x' is assigned a value but never used.","'y' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]